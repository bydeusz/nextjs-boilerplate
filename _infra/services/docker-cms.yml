# CMS Service Configuration (WordPress + MySQL + phpMyAdmin)
# Usage: docker compose -f docker-compose.yml -f services/docker-cms.yml up -d

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  wordpress:
    image: wordpress:latest
    container_name: wp_wordpress
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', true);
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('DISALLOW_FILE_EDIT', true);
        define('FS_METHOD', 'direct');
    ports:
      - "${WORDPRESS_PORT}:80"
    volumes:
      # Map a local wp-content folder for additional plugins/themes
      - ../../_docker/wp-content:/var/www/html/wp-content
      # Mount this plugin into the container's plugins directory
      - ./:/var/www/html/wp-content/plugins/wp-rest-api-plugin
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: wp_phpmyadmin
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PHPMYADMIN_PORT}:80"
    networks:
      - app_network

  wp-cli:
    image: wordpress:cli
    container_name: wp_cli
    depends_on:
      wordpress:
        condition: service_started
      mysql:
        condition: service_healthy
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    working_dir: /var/www/html
    entrypoint: ["wp"]
    volumes:
      - ../../_docker/wp-content:/var/www/html/wp-content
      - ./:/var/www/html/wp-content/plugins/wp-rest-api-plugin
    networks:
      - app_network

  wp_setup:
    image: wordpress:cli
    container_name: wp_setup
    depends_on:
      wordpress:
        condition: service_started
      mysql:
        condition: service_healthy
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    working_dir: /var/www/html
    entrypoint: ["bash", "-lc"]
    command: |
      "wp core is-installed || wp core install \
        --url=http://localhost:${WORDPRESS_PORT} \
        --title=HeadlessWP \
        --admin_user=admin \
        --admin_password=admin \
        --admin_email=admin@example.com \
        --skip-email"
    volumes:
      - ../../_docker/wp-content:/var/www/html/wp-content
      - ./:/var/www/html/wp-content/plugins/wp-rest-api-plugin
    networks:
      - app_network

volumes:
  mysql_data:
